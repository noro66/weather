{"ast":null,"code":"var _jsxFileName = \"/home/mogy/WebstormProjects/Weader/src/Components/SearchBar/SearchBar.jsx\",\n  _s2 = $RefreshSig$();\nimport style from './SearchBar.module.scss';\nimport { Button, Form } from \"react-bootstrap\";\nimport { Autocomplete, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport data from \"bootstrap/js/src/dom/data\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setData } from \"../../features/weader/WeatherSlice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SearchBar = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  const dispatch = useDispatch();\n  const Key = '9317d7bb66064a11a877fb466b8f452c';\n  const [cities, setCities] = useState([]);\n  const handelAutoChange = (e, value) => {\n    _s();\n    var _value$lon, _value$lat;\n    const Api_key = '83807b629be744c024b6c0e393389275';\n    const lon = (_value$lon = value.lon) !== null && _value$lon !== void 0 ? _value$lon : 0;\n    const lat = (_value$lat = value.lat) !== null && _value$lat !== void 0 ? _value$lat : 0;\n    const [unity, setUnity] = useState('metric');\n    // const weatherData = useSelector(state => state.weather.data);\n\n    const apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&unist=${unity}&lon=${lon}&appid=${Api_key}`;\n    fetch(apiUrl).then(response => response.json()).then(data => {\n      const {\n        clouds,\n        main,\n        name,\n        sys,\n        timezone,\n        weather,\n        wind\n      } = data;\n      dispatch(setData(data));\n    });\n  };\n  _s(handelAutoChange, \"aoRgT86a0VscWlqyvRHs8jQ4tlw=\");\n  const handelInputChange = e => {\n    const value = e.currentTarget.value;\n    const apiUrl = `https://api.geoapify.com/v1/geocode/autocomplete?text=${value}&apiKey=${Key}`;\n    fetch(apiUrl).then(response => response.json()).then(data => {\n      if (data && data.features) {\n        const citiesData = data.features.map(metadata => {\n          const {\n            city,\n            country,\n            lat,\n            lon,\n            formatted\n          } = metadata.properties;\n          return {\n            city,\n            country,\n            lat,\n            lon,\n            formatted\n          };\n        });\n        setCities(citiesData);\n      }\n    }).catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: `d-flex justify-content-center mt-5 gap-4`,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            onChange: handelAutoChange,\n            getOptionLabel: option => option.formatted,\n            clearOnBlur: false,\n            className: style.searchInput,\n            size: 'lg',\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n              ...params,\n              label: 'Enter Your City ',\n              onChange: handelInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 197\n            }, this),\n            options: cities\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: 'lg',\n            variant: 'primary',\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s2(SearchBar, \"VFbemo7NK6x0CcePCZHgXR6xK0w=\", false, function () {\n  return [useDispatch];\n});\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["style","Button","Form","Autocomplete","TextField","useState","data","useDispatch","useSelector","setData","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchBar","props","_s2","_s","$RefreshSig$","dispatch","Key","cities","setCities","handelAutoChange","e","value","_value$lon","_value$lat","Api_key","lon","lat","unity","setUnity","apiUrl","fetch","then","response","json","clouds","main","name","sys","timezone","weather","wind","handelInputChange","currentTarget","features","citiesData","map","metadata","city","country","formatted","properties","catch","error","console","children","Group","className","Label","onChange","getOptionLabel","option","clearOnBlur","searchInput","size","renderInput","params","label","fileName","_jsxFileName","lineNumber","columnNumber","options","variant","_c","$RefreshReg$"],"sources":["/home/mogy/WebstormProjects/Weader/src/Components/SearchBar/SearchBar.jsx"],"sourcesContent":["import style  from './SearchBar.module.scss'\nimport {Button, Form} from \"react-bootstrap\";\nimport {Autocomplete, TextField} from \"@mui/material\";\nimport {useState} from \"react\";\nimport data from \"bootstrap/js/src/dom/data\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setData} from \"../../features/weader/WeatherSlice\";\n\nexport  const SearchBar = (props) => {\n    const dispatch = useDispatch();\n\n\n    const Key = '9317d7bb66064a11a877fb466b8f452c';\n    const [cities, setCities] = useState([]);\n    const  handelAutoChange = (e, value) =>{\n        const Api_key = '83807b629be744c024b6c0e393389275'\n        const lon = value.lon ?? 0;\n        const lat = value.lat ?? 0;\n        const [unity, setUnity] = useState('metric')\n        // const weatherData = useSelector(state => state.weather.data);\n\n        const apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&unist=${unity}&lon=${lon}&appid=${Api_key}`;\n\n        fetch(apiUrl)\n            .then(response => response.json())\n            .then(data => {\n                const {clouds, main, name, sys, timezone, weather, wind} = data;\n                dispatch(setData(data))\n                })\n    }\n\n    const handelInputChange = (e)=>{\n       const  value = e.currentTarget.value;\n        const apiUrl = `https://api.geoapify.com/v1/geocode/autocomplete?text=${value}&apiKey=${Key}`;\n\n        fetch(apiUrl)\n            .then(response => response.json())\n            .then(data => {\n                if (data && data.features) {\n                    const citiesData = data.features.map(metadata => {\n                        const { city, country, lat, lon, formatted } = metadata.properties;\n                        return { city, country, lat, lon, formatted };\n                    });\n                    setCities(citiesData);\n                }\n            })\n            .catch(error => console.error('Error:', error));\n    }\n    return (\n        <>\n            {/*getOptionLabel={(option) => option.formatted}*/}\n            <Form >\n                <Form.Group className={`d-flex justify-content-center mt-5 gap-4` }>\n                    <Form.Label>\n                    <Autocomplete onChange={handelAutoChange} getOptionLabel={(option) => option.formatted} clearOnBlur={false} className={style.searchInput} size={'lg'} renderInput={(params) =>  <TextField {...params} label={'Enter Your City '} onChange={handelInputChange}  /> } options={cities}/>\n                    </Form.Label>\n                    <Form.Label>\n                    <Button size={'lg'}  variant={'primary'}>Search</Button>\n                    </Form.Label>\n                </Form.Group>\n            </Form>\n        </>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAO,yBAAyB;AAC5C,SAAQC,MAAM,EAAEC,IAAI,QAAO,iBAAiB;AAC5C,SAAQC,YAAY,EAAEC,SAAS,QAAO,eAAe;AACrD,SAAQC,QAAQ,QAAO,OAAO;AAC9B,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,OAAO,QAAO,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3D,OAAQ,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACjC,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAG9B,MAAMa,GAAG,GAAG,kCAAkC;EAC9C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAOkB,gBAAgB,GAAGA,CAACC,CAAC,EAAEC,KAAK,KAAI;IAAAR,EAAA;IAAA,IAAAS,UAAA,EAAAC,UAAA;IACnC,MAAMC,OAAO,GAAG,kCAAkC;IAClD,MAAMC,GAAG,IAAAH,UAAA,GAAGD,KAAK,CAACI,GAAG,cAAAH,UAAA,cAAAA,UAAA,GAAI,CAAC;IAC1B,MAAMI,GAAG,IAAAH,UAAA,GAAGF,KAAK,CAACK,GAAG,cAAAH,UAAA,cAAAA,UAAA,GAAI,CAAC;IAC1B,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,QAAQ,CAAC;IAC5C;;IAEA,MAAM4B,MAAM,GAAI,uDAAsDH,GAAI,UAASC,KAAM,QAAOF,GAAI,UAASD,OAAQ,EAAC;IAEtHM,KAAK,CAACD,MAAM,CAAC,CACRE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAC7B,IAAI,IAAI;MACV,MAAM;QAACgC,MAAM;QAAEC,IAAI;QAAEC,IAAI;QAAEC,GAAG;QAAEC,QAAQ;QAAEC,OAAO;QAAEC;MAAI,CAAC,GAAGtC,IAAI;MAC/Da,QAAQ,CAACV,OAAO,CAACH,IAAI,CAAC,CAAC;IACvB,CAAC,CAAC;EACd,CAAC;EAAAW,EAAA,CAfMM,gBAAgB;EAiBvB,MAAMsB,iBAAiB,GAAIrB,CAAC,IAAG;IAC5B,MAAOC,KAAK,GAAGD,CAAC,CAACsB,aAAa,CAACrB,KAAK;IACnC,MAAMQ,MAAM,GAAI,yDAAwDR,KAAM,WAAUL,GAAI,EAAC;IAE7Fc,KAAK,CAACD,MAAM,CAAC,CACRE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAAC7B,IAAI,IAAI;MACV,IAAIA,IAAI,IAAIA,IAAI,CAACyC,QAAQ,EAAE;QACvB,MAAMC,UAAU,GAAG1C,IAAI,CAACyC,QAAQ,CAACE,GAAG,CAACC,QAAQ,IAAI;UAC7C,MAAM;YAAEC,IAAI;YAAEC,OAAO;YAAEtB,GAAG;YAAED,GAAG;YAAEwB;UAAU,CAAC,GAAGH,QAAQ,CAACI,UAAU;UAClE,OAAO;YAAEH,IAAI;YAAEC,OAAO;YAAEtB,GAAG;YAAED,GAAG;YAAEwB;UAAU,CAAC;QACjD,CAAC,CAAC;QACF/B,SAAS,CAAC0B,UAAU,CAAC;MACzB;IACJ,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACvD,CAAC;EACD,oBACI7C,OAAA,CAAAE,SAAA;IAAA6C,QAAA,eAEI/C,OAAA,CAACT,IAAI;MAAAwD,QAAA,eACD/C,OAAA,CAACT,IAAI,CAACyD,KAAK;QAACC,SAAS,EAAG,0CAA2C;QAAAF,QAAA,gBAC/D/C,OAAA,CAACT,IAAI,CAAC2D,KAAK;UAAAH,QAAA,eACX/C,OAAA,CAACR,YAAY;YAAC2D,QAAQ,EAAEvC,gBAAiB;YAACwC,cAAc,EAAGC,MAAM,IAAKA,MAAM,CAACX,SAAU;YAACY,WAAW,EAAE,KAAM;YAACL,SAAS,EAAE5D,KAAK,CAACkE,WAAY;YAACC,IAAI,EAAE,IAAK;YAACC,WAAW,EAAGC,MAAM,iBAAM1D,OAAA,CAACP,SAAS;cAAA,GAAKiE,MAAM;cAAEC,KAAK,EAAE,kBAAmB;cAACR,QAAQ,EAAEjB;YAAkB;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAG;YAACC,OAAO,EAAEtD;UAAO;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3Q,CAAC,eACb/D,OAAA,CAACT,IAAI,CAAC2D,KAAK;UAAAH,QAAA,eACX/C,OAAA,CAACV,MAAM;YAACkE,IAAI,EAAE,IAAK;YAAES,OAAO,EAAE,SAAU;YAAAlB,QAAA,EAAC;UAAM;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC,gBACT,CAAC;AAEX,CAAC;AAAC1D,GAAA,CAvDYF,SAAS;EAAA,QACFP,WAAW;AAAA;AAAAsE,EAAA,GADlB/D,SAAS;AAAA,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}